{
	"name": "from_Int_to_dw_dimension",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Int_Cities",
						"type": "DatasetReference"
					},
					"name": "IntCities"
				},
				{
					"dataset": {
						"referenceName": "Int_Customers",
						"type": "DatasetReference"
					},
					"name": "customer"
				},
				{
					"dataset": {
						"referenceName": "Int_Customers",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "Int_People",
						"type": "DatasetReference"
					},
					"name": "employee"
				},
				{
					"dataset": {
						"referenceName": "Int_StockItems",
						"type": "DatasetReference"
					},
					"name": "stockitem"
				},
				{
					"dataset": {
						"referenceName": "Int_PackageType",
						"type": "DatasetReference"
					},
					"name": "source3"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dw_sink_cities",
						"type": "DatasetReference"
					},
					"name": "dimensionCities"
				},
				{
					"dataset": {
						"referenceName": "dw_sink_Customers",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "dw_sink_Employee",
						"type": "DatasetReference"
					},
					"name": "sink2"
				},
				{
					"dataset": {
						"referenceName": "dw_sink_StockItems",
						"type": "DatasetReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "Select1"
				},
				{
					"name": "Join1"
				},
				{
					"name": "Select2"
				},
				{
					"name": "Select3"
				},
				{
					"name": "Join4"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "Select4"
				},
				{
					"name": "Join5"
				},
				{
					"name": "Select5"
				},
				{
					"name": "Join6"
				},
				{
					"name": "Select6"
				}
			],
			"script": "source(output(\n\t\tCityID as integer,\n\t\tCityName as string,\n\t\tStateProvinceID as integer,\n\t\tLocation as binary,\n\t\tLatestRecordedPopulation as long,\n\t\tLastEditedBy as integer,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp,\n\t\tIsActive as integer,\n\t\tSurrogate as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> IntCities\nsource(output(\n\t\tCustomerID as integer,\n\t\tCustomerName as string,\n\t\tBillToCustomerID as integer,\n\t\tCustomerCategoryID as integer,\n\t\tBuyingGroupID as integer,\n\t\tPrimaryContactPersonID as integer,\n\t\tAlternateContactPersonID as integer,\n\t\tDeliveryMethodID as integer,\n\t\tDeliveryCityID as integer,\n\t\tPostalCityID as integer,\n\t\tCreditLimit as decimal(18,2),\n\t\tAccountOpenedDate as date,\n\t\tStandardDiscountPercentage as decimal(18,3),\n\t\tIsStatementSent as boolean,\n\t\tIsOnCreditHold as boolean,\n\t\tPaymentDays as integer,\n\t\tPhoneNumber as string,\n\t\tFaxNumber as string,\n\t\tDeliveryRun as string,\n\t\tRunPosition as string,\n\t\tWebsiteURL as string,\n\t\tDeliveryAddressLine1 as string,\n\t\tDeliveryAddressLine2 as string,\n\t\tDeliveryPostalCode as string,\n\t\tDeliveryLocation as binary,\n\t\tPostalAddressLine1 as string,\n\t\tPostalAddressLine2 as string,\n\t\tPostalPostalCode as string,\n\t\tLastEditedBy as integer,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp,\n\t\tIsActive as integer,\n\t\tSurrogate as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> customer\nsource(output(\n\t\tCustomerID as integer,\n\t\tCustomerName as string,\n\t\tBillToCustomerID as integer,\n\t\tCustomerCategoryID as integer,\n\t\tBuyingGroupID as integer,\n\t\tPrimaryContactPersonID as integer,\n\t\tAlternateContactPersonID as integer,\n\t\tDeliveryMethodID as integer,\n\t\tDeliveryCityID as integer,\n\t\tPostalCityID as integer,\n\t\tCreditLimit as decimal(18,2),\n\t\tAccountOpenedDate as date,\n\t\tStandardDiscountPercentage as decimal(18,3),\n\t\tIsStatementSent as boolean,\n\t\tIsOnCreditHold as boolean,\n\t\tPaymentDays as integer,\n\t\tPhoneNumber as string,\n\t\tFaxNumber as string,\n\t\tDeliveryRun as string,\n\t\tRunPosition as string,\n\t\tWebsiteURL as string,\n\t\tDeliveryAddressLine1 as string,\n\t\tDeliveryAddressLine2 as string,\n\t\tDeliveryPostalCode as string,\n\t\tDeliveryLocation as binary,\n\t\tPostalAddressLine1 as string,\n\t\tPostalAddressLine2 as string,\n\t\tPostalPostalCode as string,\n\t\tLastEditedBy as integer,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp,\n\t\tIsActive as integer,\n\t\tSurrogate as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource(output(\n\t\tPersonID as integer,\n\t\tFullName as string,\n\t\tPreferredName as string,\n\t\tSearchName as string,\n\t\tIsPermittedToLogon as boolean,\n\t\tLogonName as string,\n\t\tIsExternalLogonProvider as boolean,\n\t\tHashedPassword as binary,\n\t\tIsSystemUser as boolean,\n\t\tIsEmployee as boolean,\n\t\tIsSalesperson as boolean,\n\t\tUserPreferences as string,\n\t\tPhoneNumber as string,\n\t\tFaxNumber as string,\n\t\tEmailAddress as string,\n\t\tPhoto as binary,\n\t\tCustomFields as string,\n\t\tOtherLanguages as string,\n\t\tLastEditedBy as integer,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp,\n\t\tIsActive as integer,\n\t\tSurrogate as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> employee\nsource(output(\n\t\tStockItemID as integer,\n\t\tStockItemName as string,\n\t\tSupplierID as integer,\n\t\tColorID as integer,\n\t\tUnitPackageID as integer,\n\t\tOuterPackageID as integer,\n\t\tBrand as string,\n\t\tSize as string,\n\t\tLeadTimeDays as integer,\n\t\tQuantityPerOuter as integer,\n\t\tIsChillerStock as boolean,\n\t\tBarcode as string,\n\t\tTaxRate as decimal(18,3),\n\t\tUnitPrice as decimal(18,2),\n\t\tRecommendedRetailPrice as decimal(18,2),\n\t\tTypicalWeightPerUnit as decimal(18,3),\n\t\tMarketingComments as string,\n\t\tInternalComments as string,\n\t\tPhoto as binary,\n\t\tCustomFields as string,\n\t\tTags as string,\n\t\tSearchDetails as string,\n\t\tLastEditedBy as integer,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp,\n\t\tIsActive as integer,\n\t\tSurrogate as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> stockitem\nsource(output(\n\t\tPackageTypeID as integer,\n\t\tPackageTypeName as string,\n\t\tLastEditedBy as integer,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp,\n\t\tIsActive as integer,\n\t\tSurrogate as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source3\nIntCities select(mapColumn(\n\t\tWWI_CityID = CityID,\n\t\tCityName,\n\t\tLocation,\n\t\tLatestRecordedPopulation,\n\t\tValidFrom,\n\t\tValidTo,\n\t\tIsActive,\n\t\tCity_Key = Surrogate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\ncustomer, source1 join(customer@BillToCustomerID == source1@CustomerID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tCustomerID = customer@CustomerID,\n\t\tCustomerName = customer@CustomerName,\n\t\tBillToCustomerID = customer@BillToCustomerID,\n\t\tPrimaryContactPersonID = customer@PrimaryContactPersonID,\n\t\tPostalPostalCode = customer@PostalPostalCode,\n\t\tValidFrom = customer@ValidFrom,\n\t\tValidTo = customer@ValidTo,\n\t\tIsActive = customer@IsActive,\n\t\tSurrogate = customer@Surrogate,\n\t\tBillToCustomer = source1@CustomerName\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nJoin4 select(mapColumn(\n\t\tCustomer_Key = Select2@Surrogate,\n\t\tCustomerID = Select2@CustomerID,\n\t\tCustomerName = Select2@CustomerName,\n\t\tBillToCustomer,\n\t\tPrimaryContactPerson = source1@CustomerName,\n\t\tPostalPostalCode = Select2@PostalPostalCode,\n\t\tValidFrom = Select2@ValidFrom,\n\t\tValidTo = Select2@ValidTo\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect2, source1 join(Select2@PrimaryContactPersonID == source1@CustomerID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join4\nemployee split(IsEmployee==true(),\n\tdisjoint: false) ~> ConditionalSplit1@(employee, else)\nConditionalSplit1@employee select(mapColumn(\n\t\tEmployee_Key = Surrogate,\n\t\tWWIEmployeeID = PersonID,\n\t\tEmployeeName = FullName,\n\t\tPreferredName,\n\t\tIsSalesperson,\n\t\tPhoto,\n\t\tValidFrom,\n\t\tValidTo\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nstockitem, source3 join(UnitPackageID == PackageTypeID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join5\nJoin5 select(mapColumn(\n\t\tSurrogate = stockitem@Surrogate,\n\t\tStockItemID,\n\t\tStockItemName,\n\t\tUnitPackageID,\n\t\tUnitPackage = PackageTypeName,\n\t\tOuterPackageID,\n\t\tBrand,\n\t\tSize,\n\t\tLeadTimeDays,\n\t\tQuantityPerOuter,\n\t\tIsChillerStock,\n\t\tBarcode,\n\t\tTaxRate,\n\t\tUnitPrice,\n\t\tRecommendedRetailPrice,\n\t\tTypicalWeightPerUnit,\n\t\tPhoto,\n\t\tValidFrom = stockitem@ValidFrom,\n\t\tValidTo = stockitem@ValidTo\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nSelect5, source3 join(OuterPackageID == PackageTypeID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join6\nJoin6 select(mapColumn(\n\t\tStockItem_Key = Select5@Surrogate,\n\t\tStockItemID,\n\t\tStockItemName,\n\t\tUnitPackage,\n\t\tOuterPackage = PackageTypeName,\n\t\tBrand,\n\t\tSize,\n\t\tLeadTimeDays,\n\t\tQuantityPerOuter,\n\t\tIsChillerStock,\n\t\tBarcode,\n\t\tTaxRate,\n\t\tUnitPrice,\n\t\tRecommendedRetailPrice,\n\t\tTypicalWeightPerUnit,\n\t\tPhoto,\n\t\tValidFrom = Select5@ValidFrom,\n\t\tValidTo = Select5@ValidTo\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> dimensionCities\nSelect3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1\nSelect4 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink2\nSelect6 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink3"
		}
	}
}